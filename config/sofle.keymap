/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define DEFAULT 0
#define FUNCTION   1
#define GAME   2
#define MAC   3

/ {

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp MINUS  &kp N1 &kp N2 &kp N3 &kp N4 &kp N5                  &kp N6 &kp N7 &kp N8 &kp N9 &kp N0 &kp EQUAL
&kp TAB   &kp Q     &kp W     &kp E     &kp R     &kp T                      &kp Y     &kp U     &kp I     &kp O     &kp P     &kp BSPC
&kp ESC   &kp A     &kp S     &kp D     &kp F     &kp G                      &kp H     &kp J     &kp K     &kp L     &kp SEMI  &kp SQT
&kp LSHFT  &kp Z     &kp X     &kp C     &kp V     &kp B  &kp LC(C) &kp LC(V)    &kp N     &kp M     &kp COMMA  &kp DOT   &kp FSLH  &kp RSHFT
                    &tog MAC  &kp LCTRL  &kp LGUI  &kp LALT  &kp SPACE    &lt FUNCTION RET    &kp LC(S)     &kp LC(C)  &kp LC(V)  &tog GAME
            >;
            sensor-bindings = <&inc_dec_kp LC(RIGHT) LC(LEFT) &inc_dec_kp UP DOWN>;
        };

        fn_layer    {
            bindings = <
&kp GRAVE &kp F1 &kp F2 &kp F3 &kp F4 &kp F5 &kp F6 &kp F7 &kp F8 &kp F9 &kp F10 &bt BT_NXT
&kp TAB     &bt BT_PRV      &bt BT_NXT     &kp K_CMENU      &trans       &kp LPAR        &kp RPAR &trans    &kp UP &bt BT_PRV  &bt BT_NXT &kp  DEL
&kp ESC     &kp LALT     &kp LCTRL     &kp LSHFT     &trans       &kp LBRC      &kp RBRC &kp LEFT  &kp DOWN &kp RIGHT &trans &kp GRAVE
&kp LSHFT     &kp K_UNDO     &kp K_CUT      &kp K_COPY     &kp K_PASTE     &kp LBKT  &kp C_PP &kp LC(S)  &kp RBKT &kp C_PREV   &kp C_PP  &kp C_NEXT  &kp BSLH &kp RSHFT
                    &bt BT_CLR  &kp LCTRL  &kp LGUI  &kp LALT  &kp SPACE    &lt FUNCTION RET    &kp LC(S)     &kp LC(C)  &kp LC(V)  &bt BT_CLR
            >;
            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DOWN &inc_dec_kp PG_UP PG_DN>;
        };

        game_layer {
            bindings = <
&kp F1 &kp MINUS  &kp N1 &kp N2 &kp N3 &kp N4 &kp N5                  &kp N6 &kp N7 &kp N8 &kp N9 &kp N0 
&kp F2 &kp TAB   &kp Q     &kp W     &kp E     &kp R     &kp T                      &kp Y     &kp U     &kp I     &kp O     &kp P     
&kp F3 &kp ESC   &kp A     &kp S     &kp D     &kp F     &kp G                      &kp H     &kp J     &kp K     &kp L     &kp SEMI  
&kp F4 &kp LSHFT  &kp Z     &kp X     &kp C     &kp V     &kp B  &kp LBKT &kp RBKT    &kp N     &kp M     &kp COMMA  &kp DOT   &kp FSLH  
                    &tog MAC  &kp LCTRL  &kp LGUI  &kp LALT  &kp SPACE    &lt FUNCTION RET    &kp LC(S)     &kp LC(C)  &kp LC(V)  &tog GAME
            >;

            sensor-bindings = <&inc_dec_kp LC(RIGHT) LC(LEFT) &inc_dec_kp PG_UP PG_DN>;
        };

        mac_layer {
            bindings = <
&kp MINUS  &kp N1 &kp N2 &kp N3 &kp N4 &kp N5                  &kp N6 &kp N7 &kp N8 &kp N9 &kp N0 &kp EQUAL
&kp TAB   &kp Q     &kp W     &kp E     &kp R     &kp T                      &kp Y     &kp U     &kp I     &kp O     &kp P     &kp BSPC
&kp ESC   &kp A     &kp S     &kp D     &kp F     &kp G                      &kp H     &kp J     &kp K     &kp L     &kp SEMI  &kp SQT
&kp LSHFT  &kp Z     &kp X     &kp C     &kp V     &kp B  &kp LBKT &kp RBKT    &kp N     &kp M     &kp COMMA  &kp DOT   &kp FSLH  &kp RSHFT
                    &tog MAC  &kp LGUI  &kp LCTRL  &kp LALT  &kp SPACE    &lt FUNCTION RET    &kp LC(S)     &kp LC(C)  &kp LC(V)  &tog GAME
            >;

            sensor-bindings = <&inc_dec_kp LG(RIGHT) LG(LEFT) &inc_dec_kp PG_UP PG_DN>;
        };
    };
};
